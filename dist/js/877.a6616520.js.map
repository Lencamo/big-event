{"version":3,"file":"js/877.a6616520.js","mappings":"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","sources":["webpack://big-event/./src/components/article-manage/articleList.vue","webpack://big-event/src/components/article-manage/articleList.vue","webpack://big-event/./src/components/article-manage/articleList.vue?572e","webpack://big-event/./src/components/article-manage/articleList.vue?5cf7"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"articlList-container\"},[_c('el-card',{staticClass:\"box-card\"},[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"文章列表\")])]),_c('div',{staticClass:\"search-box\"},[_c('el-form',{attrs:{\"inline\":true,\"model\":_vm.q}},[_c('el-form-item',{attrs:{\"label\":\"文章分类\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择分类\",\"size\":\"small\"},model:{value:(_vm.q.cate_id),callback:function ($$v) {_vm.$set(_vm.q, \"cate_id\", $$v)},expression:\"q.cate_id\"}},_vm._l((_vm.cateList),function(item){return _c('el-option',{key:item.id,attrs:{\"label\":item.cate_name,\"value\":item.id}})}),1)],1),_c('el-form-item',{staticStyle:{\"margin-left\":\"15px\"},attrs:{\"label\":\"发布状态\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择状态\",\"size\":\"small\"},model:{value:(_vm.q.state),callback:function ($$v) {_vm.$set(_vm.q, \"state\", $$v)},expression:\"q.state\"}},[_c('el-option',{attrs:{\"label\":\"已发布\",\"value\":\"已发布\"}}),_c('el-option',{attrs:{\"label\":\"草稿\",\"value\":\"草稿\"}})],1)],1),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":_vm.onChooseFn}},[_vm._v(\"筛选\")]),_c('el-button',{attrs:{\"type\":\"info\",\"size\":\"small\"},on:{\"click\":_vm.resetChooseFn}},[_vm._v(\"重置\")])],1)],1),_c('el-button',{staticClass:\"btn-pub\",attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":_vm.showPubDialogFn}},[_vm._v(\"发表文章\")])],1),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.artList,\"border\":\"\",\"stripe\":\"\"}},[_c('el-table-column',{attrs:{\"label\":\"文章标题\",\"prop\":\"title\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-link',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.showDetailFn(scope.row.id)}}},[_vm._v(_vm._s(scope.row.title))])]}}])}),_c('el-table-column',{attrs:{\"label\":\"分类\",\"prop\":\"cate_name\"}}),_c('el-table-column',{attrs:{\"label\":\"发表时间\",\"prop\":\"pub_date\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',[_vm._v(_vm._s(_vm.$formatDate(scope.row.pub_date)))])]}}])}),_c('el-table-column',{attrs:{\"label\":\"状态\",\"prop\":\"state\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function({ row }){return [_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.removeArticleFn(row.id)}}},[_vm._v(\"删除\")])]}}])})],1),_c('el-pagination',{attrs:{\"current-page\":_vm.q.pagenum,\"page-sizes\":[2, 3, 5, 10],\"page-size\":_vm.q.pagesize,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.total},on:{\"size-change\":_vm.handleSizeChangeFn,\"current-change\":_vm.handleCurrentChangeFn,\"update:currentPage\":function($event){return _vm.$set(_vm.q, \"pagenum\", $event)},\"update:current-page\":function($event){return _vm.$set(_vm.q, \"pagenum\", $event)},\"update:pageSize\":function($event){return _vm.$set(_vm.q, \"pagesize\", $event)},\"update:page-size\":function($event){return _vm.$set(_vm.q, \"pagesize\", $event)}}})],1),_c('el-dialog',{attrs:{\"title\":\"发表\",\"visible\":_vm.pubdialogVisible,\"fullscreen\":\"\",\"before-close\":_vm.handleClose},on:{\"update:visible\":function($event){_vm.pubdialogVisible=$event},\"closed\":_vm.dialogCloseFn}},[_c('el-form',{ref:\"pubFormRef\",attrs:{\"model\":_vm.pubForm,\"rules\":_vm.pubFormRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"文章标题\",\"prop\":\"title\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入标题\"},model:{value:(_vm.pubForm.title),callback:function ($$v) {_vm.$set(_vm.pubForm, \"title\", $$v)},expression:\"pubForm.title\"}})],1),_c('el-form-item',{attrs:{\"label\":\"文章分类\",\"prop\":\"cate_id\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"placeholder\":\"请选择分类\"},model:{value:(_vm.pubForm.cate_id),callback:function ($$v) {_vm.$set(_vm.pubForm, \"cate_id\", $$v)},expression:\"pubForm.cate_id\"}},_vm._l((_vm.cateList),function(item){return _c('el-option',{key:item.id,attrs:{\"label\":item.cate_name,\"value\":item.id}})}),1)],1),_c('el-form-item',{attrs:{\"label\":\"文章内容\",\"prop\":\"content\"}},[_c('quill-editor',{on:{\"change\":_vm.contentChangeFn},model:{value:(_vm.pubForm.content),callback:function ($$v) {_vm.$set(_vm.pubForm, \"content\", $$v)},expression:\"pubForm.content\"}})],1),_c('el-form-item',{attrs:{\"label\":\"文章封面\",\"prop\":\"cover_img\"}},[_c('img',{ref:\"imgRef\",staticClass:\"cover-img\",attrs:{\"src\":require(\"../../assets/images/cover.jpg\"),\"alt\":\"\"}}),_c('br'),_c('input',{ref:\"iptFileRef\",staticStyle:{\"display\":\"none\"},attrs:{\"type\":\"file\",\"accept\":\"image/*\"},on:{\"change\":_vm.onCoverChangeFn}}),_c('el-button',{attrs:{\"type\":\"text\"},on:{\"click\":_vm.chooseImgFn}},[_vm._v(\"+ 选择封面\")])],1),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.pubArticleFn('已发布')}}},[_vm._v(\"发布\")]),_c('el-button',{attrs:{\"type\":\"info\"},on:{\"click\":function($event){return _vm.pubArticleFn('草稿')}}},[_vm._v(\"存为草稿\")])],1)],1)],1),_c('el-dialog',{attrs:{\"title\":\"文章预览\",\"visible\":_vm.detailVisible,\"width\":\"80%\"},on:{\"update:visible\":function($event){_vm.detailVisible=$event}}},[_c('h1',{staticClass:\"title\"},[_vm._v(_vm._s(_vm.artDetail.title))]),_c('div',{staticClass:\"info\"},[_c('span',[_vm._v(\"作者：\"+_vm._s(_vm.artDetail.nickname || _vm.artDetail.username))]),_c('span',[_vm._v(\"发布时间：\"+_vm._s(_vm.$formatDate(_vm.artDetail.pub_date)))]),_c('span',[_vm._v(\"所属分类：\"+_vm._s(_vm.artDetail.cate_name))]),_c('span',[_vm._v(\"状态：\"+_vm._s(_vm.artDetail.state))])]),_c('el-divider'),_c('img',{attrs:{\"src\":_vm.baseURL + _vm.artDetail.cover_img,\"alt\":\"\"}}),_c('div',{staticClass:\"detail-box\",domProps:{\"innerHTML\":_vm._s(_vm.artDetail.content)}})],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"articlList-container\">\r\n    <!-- 核心页面 -->\r\n    <el-card class=\"box-card\">\r\n      <div slot=\"header\" class=\"clearfix\">\r\n        <span>文章列表</span>\r\n      </div>\r\n      <!-- 搜索区域 -->\r\n      <div class=\"search-box\">\r\n        <el-form :inline=\"true\" :model=\"q\">\r\n          <el-form-item label=\"文章分类\">\r\n            <el-select\r\n              v-model=\"q.cate_id\"\r\n              placeholder=\"请选择分类\"\r\n              size=\"small\"\r\n            >\r\n              <!-- 文章分类选择 - 搜索栏区域 -->\r\n              <!-- label是页面展示的值，value的🚩值是给js调用待使用的数据 -->\r\n              <el-option\r\n                :label=\"item.cate_name\"\r\n                :value=\"item.id\"\r\n                v-for=\"item in cateList\"\r\n                :key=\"item.id\"\r\n              >\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"发布状态\" style=\"margin-left: 15px\">\r\n            <el-select v-model=\"q.state\" placeholder=\"请选择状态\" size=\"small\">\r\n              <el-option label=\"已发布\" value=\"已发布\"></el-option>\r\n              <el-option label=\"草稿\" value=\"草稿\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <!-- 筛选与重置 -->\r\n          <el-form-item>\r\n            <el-button type=\"primary\" size=\"small\" @click=\"onChooseFn\"\r\n              >筛选</el-button\r\n            >\r\n            <el-button type=\"info\" size=\"small\" @click=\"resetChooseFn\"\r\n              >重置</el-button\r\n            >\r\n          </el-form-item>\r\n        </el-form>\r\n        <!-- 发表文章的按钮 -->\r\n        <el-button\r\n          type=\"primary\"\r\n          size=\"small\"\r\n          class=\"btn-pub\"\r\n          @click=\"showPubDialogFn\"\r\n          >发表文章</el-button\r\n        >\r\n      </div>\r\n      <!-- 下方文章列表内容区域 -->\r\n      <el-table :data=\"artList\" style=\"width: 100%\" border stripe>\r\n        <el-table-column label=\"文章标题\" prop=\"title\">\r\n          <template slot-scope=\"scope\">\r\n            <el-link type=\"primary\" @click=\"showDetailFn(scope.row.id)\">{{\r\n              scope.row.title\r\n            }}</el-link>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"分类\" prop=\"cate_name\"></el-table-column>\r\n        <el-table-column label=\"发表时间\" prop=\"pub_date\">\r\n          <!-- 巧用✨插槽自定义显示内容 -->\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ $formatDate(scope.row.pub_date) }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"状态\" prop=\"state\"></el-table-column>\r\n        <el-table-column label=\"操作\">\r\n          <template slot-scope=\"{ row }\">\r\n            <el-button\r\n              type=\"danger\"\r\n              size=\"mini\"\r\n              @click=\"removeArticleFn(row.id)\"\r\n              >删除</el-button\r\n            >\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <!-- 文章列表的分页区域 -->\r\n      <!-- 分页区域 -->\r\n      <el-pagination\r\n        @size-change=\"handleSizeChangeFn\"\r\n        @current-change=\"handleCurrentChangeFn\"\r\n        :current-page.sync=\"q.pagenum\"\r\n        :page-sizes=\"[2, 3, 5, 10]\"\r\n        :page-size.sync=\"q.pagesize\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\"\r\n      >\r\n      </el-pagination>\r\n    </el-card>\r\n\r\n    <!-- 发布文章-对话框 -->\r\n    <el-dialog\r\n      title=\"发表\"\r\n      :visible.sync=\"pubdialogVisible\"\r\n      fullscreen\r\n      :before-close=\"handleClose\"\r\n      @closed=\"dialogCloseFn\"\r\n    >\r\n      <el-form\r\n        :model=\"pubForm\"\r\n        :rules=\"pubFormRules\"\r\n        ref=\"pubFormRef\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item label=\"文章标题\" prop=\"title\">\r\n          <el-input v-model=\"pubForm.title\" placeholder=\"请输入标题\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"文章分类\" prop=\"cate_id\">\r\n          <el-select\r\n            v-model=\"pubForm.cate_id\"\r\n            placeholder=\"请选择分类\"\r\n            style=\"width: 100%\"\r\n          >\r\n            <!-- 文章分类选择 - 发布文章区域 -->\r\n            <!-- label是页面展示的值，value的🚩值是给js调用待使用的数据（pubForm.cata_id） -->\r\n            <el-option\r\n              :label=\"item.cate_name\"\r\n              :value=\"item.id\"\r\n              v-for=\"item in cateList\"\r\n              :key=\"item.id\"\r\n            >\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <!-- 富文本编辑器 -->\r\n        <el-form-item label=\"文章内容\" prop=\"content\">\r\n          <quill-editor\r\n            v-model=\"pubForm.content\"\r\n            @change=\"contentChangeFn\"\r\n          ></quill-editor>\r\n        </el-form-item>\r\n        <!-- 文章封面 -->\r\n        <el-form-item label=\"文章封面\" prop=\"cover_img\">\r\n          <!-- 用来显示封面的图片 -->\r\n          <img\r\n            src=\"../../assets/images/cover.jpg\"\r\n            alt=\"\"\r\n            class=\"cover-img\"\r\n            ref=\"imgRef\"\r\n          />\r\n          <br />\r\n          <!-- 文件选择框，默认被隐藏 -->\r\n          <input\r\n            type=\"file\"\r\n            style=\"display: none\"\r\n            accept=\"image/*\"\r\n            ref=\"iptFileRef\"\r\n            @change=\"onCoverChangeFn\"\r\n          />\r\n          <!-- 选择封面的按钮 -->\r\n          <el-button type=\"text\" @click=\"chooseImgFn\">+ 选择封面</el-button>\r\n        </el-form-item>\r\n        <!-- 发布与存为草稿按钮 -->\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"pubArticleFn('已发布')\"\r\n            >发布</el-button\r\n          >\r\n          <el-button type=\"info\" @click=\"pubArticleFn('草稿')\"\r\n            >存为草稿</el-button\r\n          >\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-dialog>\r\n\r\n    <!-- 查看文章详情-对话框 -->\r\n    <el-dialog title=\"文章预览\" :visible.sync=\"detailVisible\" width=\"80%\">\r\n      <h1 class=\"title\">{{ artDetail.title }}</h1>\r\n\r\n      <div class=\"info\">\r\n        <span>作者：{{ artDetail.nickname || artDetail.username }}</span>\r\n        <span>发布时间：{{ $formatDate(artDetail.pub_date) }}</span>\r\n        <span>所属分类：{{ artDetail.cate_name }}</span>\r\n        <span>状态：{{ artDetail.state }}</span>\r\n      </div>\r\n\r\n      <!-- 分割线 -->\r\n      <el-divider></el-divider>\r\n\r\n      <!-- 文章的封面 -->\r\n      <!-- 追加图片基地址 -->\r\n      <img :src=\"baseURL + artDetail.cover_img\" alt=\"\" />\r\n\r\n      <!-- 文章的详情 -->\r\n      <!-- 注意✨：这里的内容要用v-html进行解析 -->\r\n      <div v-html=\"artDetail.content\" class=\"detail-box\"></div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getArtCateListAPI,\r\n  uploadArticleAPI,\r\n  getArticleListAPI,\r\n  getArticleDetailFn,\r\n  delArticleAPI\r\n} from '@/api/index'\r\n// 注意✨：js中引入图片要所以import\r\nimport defaultImg from '@/assets/images/cover.jpg'\r\n// 引入图片基地址\r\nimport { baseURL } from '@/utils/axios/axios-instance'\r\n\r\nexport default {\r\n  name: 'articleList',\r\n  data() {\r\n    return {\r\n      baseURL: baseURL,\r\n      // 文章分类数据\r\n      cateList: [],\r\n      // articleList组件的查询参数对象\r\n      q: {\r\n        pagenum: 1, // 默认显示第一页数据\r\n        pagesize: 5, // 默认当前页显示几条数据\r\n        cate_id: '',\r\n        state: ''\r\n      },\r\n      // 文章的列表数据\r\n      artList: [],\r\n      // 总数据条数\r\n      total: 0,\r\n      pubdialogVisible: false,\r\n      detailVisible: false,\r\n      // 文章详情数据\r\n      artDetail: {},\r\n      // 发布文章对话框表单数据对象\r\n      pubForm: {\r\n        title: '',\r\n        cate_id: '',\r\n        content: '',\r\n        cover_img: null, // 用户选择的封面图片（null 表示没有选择任何封面）\r\n        state: '' // 文章的发布状态，可选值有两个：草稿、已发布\r\n      },\r\n      // 发布文章对话框表单验证规则对象\r\n      pubFormRules: {\r\n        // 表单的验证规则对象\r\n        title: [\r\n          { required: true, message: '请输入文章标题', trigger: 'blur' },\r\n          {\r\n            min: 1,\r\n            max: 30,\r\n            message: '文章标题的长度为1-30个字符',\r\n            trigger: 'blur'\r\n          }\r\n        ],\r\n        cate_id: [\r\n          // 使用change事件✨对下拉菜单进行校验\r\n          { required: true, message: '请选择文章标题', trigger: 'change' }\r\n        ],\r\n        content: [\r\n          // 由于quil-editor是引入的，不会自动走校验\r\n          // 解决办法：用它自带触发函数间接进行校验\r\n          { required: true, message: '输入文章内容', trigger: 'blur' }\r\n        ],\r\n        cover_img: [\r\n          // 这里的图片校验和前面的富文本器校验一样的解决方法（单独校验）\r\n          { required: true, message: '请选择封面', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    // 进入页面时就 请求分类数据、列表数据\r\n    this.getCateListFn()\r\n    this.getArtListFn()\r\n  },\r\n  methods: {\r\n    // 获取文章分类\r\n    async getCateListFn() {\r\n      const { data: res } = await getArtCateListAPI()\r\n      // console.log(res)\r\n      this.cateList = res.data\r\n    },\r\n    // 获取文章列表\r\n    async getArtListFn() {\r\n      const { data: res } = await getArticleListAPI(this.q)\r\n\r\n      // console.log(res)\r\n      if (res.code !== 0) return this.$message.error('获取文章列表失败!')\r\n      this.artList = res.data\r\n      this.total = res.total\r\n    },\r\n\r\n    // 发表文章-触发按钮\r\n    // 使用dialog对话框🤔（删除了确认、取消按钮）\r\n    showPubDialogFn() {\r\n      this.pubdialogVisible = true\r\n    },\r\n    // 发表文章-对话框关闭前的回调🚩\r\n    // 这个方法将代替原先dialog对话框的确认、取消按钮\r\n    handleClose(done) {\r\n      // 使用element-ui的MessageBox弹框（前面退出功能也用过）\r\n      // 这里从异步的角度分析\r\n      // const confirmResult = await this.$confirm(……)\r\n      this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      })\r\n        // 若选择确定的操作\r\n        .then(() => {\r\n          // 关闭对话框\r\n          done()\r\n        })\r\n        // 若选择取消的操作\r\n        .catch(() => {\r\n          this.$message.success('已取消！')\r\n        })\r\n    },\r\n    // 间接代替文件选择框的点击事件\r\n    chooseImgFn() {\r\n      this.$refs.iptFileRef.click()\r\n    },\r\n    // 封面选择改变的事件（图片预览：这里采用第二种方式 【注意比较与前面的图片预览所以的区别】）\r\n    onCoverChangeFn(e) {\r\n      // 获取用户选择的文件列表\r\n      const files = e.target.files\r\n      if (files.length === 0) {\r\n        // 用户没有选择封面\r\n        this.pubForm.cover_img = null\r\n\r\n        this.$refs.imgRef.setAttribute('src', defaultImg)\r\n      } else {\r\n        // 用户选择了封面\r\n        this.pubForm.cover_img = files[0]\r\n        const url = URL.createObjectURL(files[0])\r\n        this.$refs.imgRef.setAttribute('src', url)\r\n      }\r\n\r\n      // 封面图片单独校验解决\r\n      this.$refs.pubFormRef.validateField('cover_img')\r\n    },\r\n    // 发布文章或草稿-按钮点击事件\r\n    pubArticleFn(str) {\r\n      // 1. 设置发布状态\r\n      this.pubForm.state = str\r\n\r\n      // // 2. 表单预校验（兜底校验）\r\n      this.$refs.pubFormRef.validate(async (valid) => {\r\n        if (valid) {\r\n          // 创建 FormData 表单数据对象\r\n          // FormData类是THML5的内容（是一个用于装文件的容器）\r\n          const fd = new FormData()\r\n\r\n          // 向 FormData 中追加数据\r\n          // 方式1\r\n          // fd.append('title', this.pubForm.title)\r\n          // fd.append('cate_id', this.pubForm.cate_id)\r\n          // fd.append('content', this.pubForm.content)\r\n          // fd.append('cover_img', this.pubForm.cover_img)\r\n          // fd.append('state', this.pubForm.state)\r\n          // 方式2：使用Object.keys加forEach()\r\n          Object.keys(this.pubForm).forEach((key) => {\r\n            fd.append(key, this.pubForm[key])\r\n          })\r\n          console.log(fd)\r\n          // 发起请求\r\n          const { data: res } = await uploadArticleAPI(fd)\r\n          console.log(res)\r\n          if (res.code !== 0) {\r\n            this.$message.error('发布文章失败！')\r\n          } else {\r\n            this.$message.success('发布文章成功！')\r\n\r\n            // 关闭对话框\r\n            this.pubdialogVisible = false\r\n\r\n            // 刷新主页面文章列表数据\r\n            this.getArtListFn()\r\n          }\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    // 使用element-ui中的validateField()方法让富文本编辑器实现校验功能\r\n    contentChangeFn() {\r\n      // validateField()对部分表单字段进行校验的方法\r\n      this.$refs.pubFormRef.validateField('content')\r\n    },\r\n    // 发布文章或草稿后的操作\r\n    dialogCloseFn() {\r\n      // 清空关键数据\r\n      this.$refs.pubFormRef.resetFields()\r\n      // 因为这2个变量对应的标签不是表单绑定的, 所以需要✨单独控制\r\n      this.pubForm.content = ''\r\n      this.$refs.imgRef.setAttribute('src', defaultImg)\r\n    },\r\n    // 文章列表条数发生改变时(element-ui内置回调参数)\r\n    handleSizeChangeFn(newSize) {\r\n      // 为 pagesize 赋值\r\n      this.q.pagesize = newSize\r\n\r\n      // 解决在非第一页文章列表进行列表条数n切换后，内容不显示的bug\r\n      // 问题分析1：通过network可以发现切换分页时，发生了两次getArtListFn()请求\r\n      // bug产生原因：对比请求可以发现 ——\r\n      // ① 由于条数改变而触发getArtListFn()请求【当然页的n条数据】，结果为空\r\n      // ② 由于页面改变而触发getArtListFn()请求【页面改变后的n条数据】，结果正常\r\n      // 若①请求的速度快与②请求的速度时，就会产生一个✨偶发性的bug✨\r\n      // 解决问题：\r\n      // 默认展示第一页数据（有能力的也可以让人展示最后一页数据）\r\n      this.q.pagenum = 1\r\n\r\n      // 重新发起请求\r\n      this.getArtListFn()\r\n    },\r\n    // 文章列表页数发生改变时(element-ui内置回调参数)\r\n    handleCurrentChangeFn(newPage) {\r\n      // 为页码值赋值\r\n      this.q.pagenum = newPage\r\n      // 重新发起请求\r\n      this.getArtListFn()\r\n    },\r\n    // 触发筛选文章按钮\r\n    onChooseFn() {\r\n      this.getArtListFn()\r\n    },\r\n    // 触发重置文章筛选按钮\r\n    resetChooseFn() {\r\n      // 1. 重置查询参数对象\r\n      this.q = {\r\n        pagenum: 1,\r\n        pagesize: 5,\r\n        cate_id: '',\r\n        state: ''\r\n      }\r\n      // 2. 重新发起请求\r\n      this.getArtListFn()\r\n    },\r\n    // 展示文章详情链接\r\n    async showDetailFn(id) {\r\n      const { data: res } = await getArticleDetailFn(id)\r\n      // console.log(res)\r\n\r\n      if (res.code !== 0) return this.$message.error('获取文章详情失败!')\r\n      this.artDetail = res.data\r\n      // 展示文章详情对话框\r\n      this.detailVisible = true\r\n    },\r\n    // 文章删除按钮\r\n    async removeArticleFn(id) {\r\n      // 1. 询问用户是否要删除\r\n      const confirmResult = await this.$confirm(\r\n        '此操作将永久删除该文件, 是否继续?',\r\n        '提示',\r\n        {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }\r\n      ).catch((err) => err)\r\n\r\n      // 2. 取消了删除\r\n      if (confirmResult === 'cancel') return\r\n\r\n      // 执行删除的操作\r\n      const { data: res } = await delArticleAPI(id)\r\n\r\n      if (res.code !== 0) return this.$message.error('删除文章失败!')\r\n      this.$message.success('删除文章成功!')\r\n\r\n      // 问题：在最后一页中删除最后一篇文章时，虽然页码能会到上一页，但数据没有出现的小bug\r\n      // 解决方法：让它重点跳转到上一页\r\n      // if (this.artList.length === 1) {\r\n      //   if (this.q.pagenum > 1) {\r\n      //     this.q.pagenum--\r\n      //   }\r\n      // }\r\n\r\n      // 刷新列表数据\r\n      this.getArtListFn()\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.articlList-container {\r\n  .search-box {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-start;\r\n    .btn-pub {\r\n      margin-top: 5px;\r\n    }\r\n  }\r\n}\r\n// 设置富文本编辑器的默认最小高度\r\n// ::v-deep作用: 穿透选择, 正常style上加了scope的话, 会给.ql-editor[data-v-hash]属性, 只能选择当前页面标签或者组件的根标签\r\n// 如果想要选择组件内的标签(那些标签没有data-v-hash值)所以正常选择选不中, 加了::v-deep空格前置的话, 选择器就会变成如下形式\r\n// [data-v-hash] .ql-editor 这样就能选中组件内的标签的class类名了\r\n::v-deep .ql-editor {\r\n  min-height: 300px;\r\n}\r\n\r\n// 设置图片封面的宽高\r\n.cover-img {\r\n  width: 400px;\r\n  height: 280px;\r\n  object-fit: cover;\r\n}\r\n\r\n// 文章列表样式\r\n.el-pagination {\r\n  margin-top: 15px;\r\n}\r\n\r\n// 文章详情对话框样式美化\r\n.title {\r\n  font-size: 24px;\r\n  text-align: center;\r\n  font-weight: normal;\r\n  color: #000;\r\n  margin: 0 0 10px 0;\r\n}\r\n\r\n.info {\r\n  font-size: 12px;\r\n  span {\r\n    margin-right: 20px;\r\n  }\r\n}\r\n\r\n// 修改 dialog 内部元素的样式，需要添加样式穿透\r\n::v-deep .detail-box {\r\n  img {\r\n    width: 500px;\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./articleList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./articleList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./articleList.vue?vue&type=template&id=8396a0ca&scoped=true&\"\nimport script from \"./articleList.vue?vue&type=script&lang=js&\"\nexport * from \"./articleList.vue?vue&type=script&lang=js&\"\nimport style0 from \"./articleList.vue?vue&type=style&index=0&id=8396a0ca&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"8396a0ca\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","attrs","slot","_v","q","model","value","cate_id","callback","$$v","$set","expression","_l","cateList","item","key","id","cate_name","staticStyle","state","on","onChooseFn","resetChooseFn","showPubDialogFn","artList","scopedSlots","_u","fn","scope","$event","showDetailFn","row","_s","title","$formatDate","pub_date","removeArticleFn","pagenum","pagesize","total","handleSizeChangeFn","handleCurrentChangeFn","pubdialogVisible","handleClose","dialogCloseFn","ref","pubForm","pubFormRules","contentChangeFn","content","require","onCoverChangeFn","chooseImgFn","pubArticleFn","detailVisible","artDetail","nickname","username","baseURL","cover_img","domProps","staticRenderFns","name","data","required","message","trigger","min","max","created","methods","confirmButtonText","cancelButtonText","type","then","done","catch","Object","fd","console","err","component"],"sourceRoot":""}